openapi: 3.0.0
info:
  title: API de Gestion des Utilisateurs
  version: 1.0.0
  description: API permettant de créer un compte utilisateur.

servers:
  - url: https://projet-tailleur-backend.vercel.app

paths:
  /api/v1/register:
    post:
      summary: Créer un nouveau compte utilisateur
      tags:
        - Utilisateurs
      requestBody:
        description: Données nécessaires pour créer un nouveau compte utilisateur.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Adresse email de l'utilisateur.
                  example: "johndoe@example.com"
                password:
                  type: string
                  format: password
                  description: Mot de passe de l'utilisateur.
                  example: "Passw0rd!"
                confirm_password:
                  type: string
                  format: password
                  description: Mot de passe de confirmation.
                  example: "Passw0rd!"
                firstName:
                  type: string
                  description: Prénom de l'utilisateur.
                  example: "John"
                lastName:
                  type: string
                  description: Nom de famille de l'utilisateur.
                  example: "Doe"
                role:
                  type: string
                  description: Rôle de l'utilisateur.
                  example: "user"
                phone:
                  type: string
                  description: Téléphone de l'utilisateur.
                  example: "+1 123-456-7890"
                city:
                  type: string
                  description: Ville de l'utilisateur.
                  example: "New York"
                picture:
                  type: string
                  description: Chemin d'accès à l'image de l'utilisateur.
                identifiant:
                  type: string
                  description: Identifiant unique de l'utilisateur.
                  example: "john_doe"
      responses:
        '201':
          description: Compte utilisateur créé avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Compte utilisateur créé avec succès."
                  status:
                    type: string
                    example: "Valider"
        '400':
          description: Requête invalide (données manquantes ou incorrectes).
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Les données fournies sont invalides."
        '409':
          description: Conflit - Nom d'utilisateur ou email déjà utilisé.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Nom d'utilisateur ou email déjà utilisé."
        '500':
          description: Erreur interne du serveur.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Une erreur interne s'est produite."

  /api/v1/tailleur/status:
    get:
      summary: Liste les statuts de l'utilisateur connecté
      description: Récupère les statuts actifs pour le tailleur ou client connecté.
      tags:
        - Status
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: Liste des statuts retournée avec succès
        '400':
          description: ID utilisateur invalide
        '404':
          description: Compte ou statut non trouvé
        '500':
          description: Erreur serveur

  /api/v1/client/unlike:
    delete:
      summary: Désignaler un utilisateur
      tags:
        - Utilisateurs
      requestBody:
        description: Données nécessaires pour supprimer un like ou un dislike.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                postId:
                  type: string
                  description: ID du post pour lequel le like ou le dislike doit être supprimé.
                  example: "66ba2d393914cebca4eb2102"
                compteId:
                  type: string
                  description: ID du compte utilisateur qui a effectué le like ou le dislike.
                  example: "66ba2d383914cebca4eb20f6"
                etat:
                  type: string
                  description: État de l'interaction ('like' ou 'dislike').
                  example: "like"
      responses:
        '200':
          description: Like ou dislike supprimé avec succès.

  /api/v1/login:
    post:
      summary: Authentifier un utilisateur
      tags:
        - Utilisateurs
      requestBody:
        description: Données nécessaires pour authentifier un utilisateur.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Adresse email de l'utilisateur.
                  example: "johndoe@example.com"
                password:
                  type: string
                  format: password
                  description: Mot de passe de l'utilisateur.
                  example: "Passw0rd!"
              required:
                - email
                - password
      responses:
        '200':
          description: Connexion réussie.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  status:
                    type: string
                    example: "OK"
                  message:
                    type: string
                    example: "Connexion réussie"
        '400':
          description: Requête invalide (état incorrect ou données manquantes).
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "État invalide."
                  status:
                    type: string
                    example: "KO"
        '404':
          description: Utilisateur non trouvé.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Utilisateur non trouvé."
                  status:
                    type: string
                    example: "KO"
        '500':
          description: Erreur interne du serveur.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Une erreur interne s'est produite."
                  status:
                    type: string
                    example: "KO"

  /api/v1/client/accueil/search:
    post:
      summary: Rechercher des utilisateurs, des comptes et des posts
      tags:
        - Recherche
      requestBody:
        description: Données nécessaires pour effectuer une recherche.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                searchText:
                  type: string
                  description: Texte à rechercher dans les utilisateurs, comptes et posts.
                  example: "John"
      responses:
        '200':
          description: Résultats de la recherche retournés avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  comptes:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: Identifiant du compte.
                        email:
                          type: string
                          description: Adresse email du compte.
                        identifiant:
                          type: string
                          description: Identifiant unique du compte.
                        role:
                          type: string
                          description: Rôle du compte.
                        etat:
                          type: string
                          description: État du compte.
                  posts:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: Identifiant du post.
                        title:
                          type: string
                          description: Titre du post.
                        content:
                          type: string
                          description: Contenu du post.
                  message:
                    type: string
                    example: "Résultats de la recherche"
                  status:
                    type: string
                    example: "OK"
        '403':
          description: Compte désactivé.
        '500':
          description: Erreur lors de la recherche (aucun résultat trouvé ou erreur serveur).
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Aucun résultat trouvé ou erreur serveur."
                  status:
                    type: string
                    example: "KO"

  /api/v1/client/accueil:
    get:
      summary: Accueil du client
      tags:
        - Utilisateurs
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: Accueil du client affiché avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  comptes:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: Identifiant du compte.
                        email:
                          type: string
                          description: Adresse email du compte.
                        identifiant:
                          type: string
                          description: Identifiant unique du compte.
                        role:
                          type: string
                          description: Rôle du compte.
                        etat:
                          type: string
                          description: État du compte.
                  posts:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: Identifiant du post.
                        title:
                          type: string
                          description: Titre du post.
                        content:
                          type: string
                          description: Contenu du post.
                  message:
                    type: string
                    example: "Accueil du client affiché avec succès."
                  status:
                    type: string
                    example: "OK"
        '500':
          description: Erreur lors de l'affichage de l'accueil du client.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Erreur lors de l'affichage de l'accueil du client."
                  status:
                    type: string
                    example: "KO"

  /api/v1/client/posts/comment:
    post:
      summary: Ajouter une réponse à un commentaire
      tags:
        - Commentaires
      requestBody:
        description: Données nécessaires pour ajouter une réponse à un commentaire.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                postId:
                  type: string
                  description: ID du post auquel répondre.
                  example: "66ba2d393914cebca4eb2102"
                commentId:
                  type: string
                  description: ID du commentaire auquel répondre.
                  example: "66ba2d383914cebca4eb20f6"
                content:
                  type: string
                  description: Contenu de la réponse.
                  example: "Merci pour votre commentaire !"
      responses:
        '200':
          description: Réponse ajoutée avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Réponse ajoutée avec succès."
                  status:
                    type: string
                    example: "OK"
        '400':
          description: Requête invalide (données manquantes ou incorrectes).
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Les données fournies sont invalides."
                  status:
                    type: string
                    example: "KO"
        '404':
          description: Commentaire ou post non trouvé.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Commentaire ou post non trouvé."
                  status:
                    type: string
                    example: "KO"
        '500':
          description: Erreur interne du serveur.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Une erreur interne s'est produite."
                  status:
                    type: string
                    example: "KO"

  /api/v1/client/favorites/add:
    post:
      summary: Ajouter un client à vos favoris
      tags:
        - Utilisateurs/favorites
      security:
        - bearerAuth: [ ]
      requestBody:
        description: Données nécessaires pour ajouter un client aux favoris.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                compte_id:
                  type: string
                  description: Identifiant du client à ajouter aux favoris.
                  example: "605c72ef7d3b3d001f647a4e"
                post_id:
                  type: string
                  description: Identifiant du post à ajouter aux favoris.
                  example: "605c72ef7d3b3d001f647a4f"
              required:
                - compte_id
                - post_id
      responses:
        '201':
          description: Favori ajouté avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Favori ajouté avec succès."
                  status:
                    type: string
                    example: "OK"
        '400':
          description: Erreur de validation des données fournies.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Données invalides."
                  status:
                    type: string
                    example: "KO"
        '404':
          description: Client ou post non trouvé.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Client ou post non trouvé."
                  status:
                    type: string
                    example: "KO"
        '500':
          description: Erreur interne du serveur.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Erreur interne du serveur."
                  status:
                    type: string
                    example: "KO"

  /api/v1/client/favorites/delete:
    delete:
      summary: Supprimer un client de vos favoris
      tags:
        - Utilisateurs/favorites
      security:
        - bearerAuth: [ ]
      requestBody:
        description: Données nécessaires pour supprimer un client des favoris.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                compte_id:
                  type: string
                  description: Identifiant du client à retirer des favoris.
                  example: "605c72ef7d3b3d001f647a4e"
                post_id:
                  type: string
                  description: Identifiant du post à retirer des favoris.
                  example: "605c72ef7d3b3d001f647a4f"
              required:
                - compte_id
                - post_id
      responses:
        '200':
          description: Favori supprimé avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Favori supprimé avec succès."
                  status:
                    type: string
                    example: "OK"
        '400':
          description: Erreur de validation des données fournies.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Données invalides."
                  status:
                    type: string
                    example: "KO"
        '404':
          description: Client ou post non trouvé.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Client ou post non trouvé."
                  status:
                    type: string
                    example: "KO"
        '500':
          description: Erreur interne du serveur.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Erreur interne du serveur."
                  status:
                    type: string
                    example: "KO"

  /api/v1/tailleur/posts:
    get:
      summary: Liste tous les posts de l'utilisateur connecté
      description: Récupère les posts du tailleur connecté, ainsi que ceux des tailleurs qu'il suit.
      tags:
        - Posts
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: Liste des posts retournée avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  posts:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: Identifiant du post.
                        title:
                          type: string
                          description: Titre du post.
                        content:
                          type: string
                          description: Contenu du post.
                        createdAt:
                          type: string
                          format: date-time
                          description: Date de création du post.
                        updatedAt:
                          type: string
                          format: date-time
                          description: Date de la dernière mise à jour du post.
                  message:
                    type: string
                    example: "Liste des posts récupérée avec succès."
                  status:
                    type: string
                    example: "OK"
        '400':
          description: ID utilisateur invalide.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "ID utilisateur invalide."
                  status:
                    type: string
                    example: "KO"
        '404':
          description: Compte ou post non trouvé.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Compte ou post non trouvé."
                  status:
                    type: string
                    example: "KO"
        '500':
          description: Erreur interne du serveur.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Erreur interne du serveur."
                  status:
                    type: string
                    example: "KO"
    post:
      summary: Crée un nouveau post
      description: Permet à un tailleur de créer un nouveau post.
      tags:
        - Posts
      security:
        - bearerAuth: [ ]
      requestBody:
        description: Données nécessaires pour créer un nouveau post.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Titre du post.
                  example: "Nouveau post"
                content:
                  type: string
                  description: Contenu du post.
                  example: "Voici le contenu de mon nouveau post."
              required:
                - title
                - content
      responses:
        '201':
          description: Post créé avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Post créé avec succès."
                  status:
                    type: string
                    example: "OK"
        '400':
          description: Erreur de validation des données fournies.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Données invalides."
                  status:
                    type: string
                    example: "KO"
        '500':
          description: Erreur interne du serveur.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Erreur interne du serveur."
                  status:
                    type: string
                    example: "KO"

  /api/v1/client/notifications:
    get:
      summary: Notifications du client
      tags:
        - Utilisateurs
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: Notifications du client affichées avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  notifications:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: Identifiant de la notification.
                        content:
                          type: string
                          description: Contenu de la notification.
                        createdAt:
                          type: string
                          format: date-time
                          description: Date de création de la notification.
                  message:
                    type: string
                    example: "Notifications affichées avec succès."
                  status:
                    type: string
                    example: "OK"
        '404':
          description: Notifications non trouvées.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Notifications non trouvées."
                  status:
                    type: string
                    example: "KO"
        '500':
          description: Erreur lors de l'affichage des notifications.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Erreur interne du serveur."
                  status:
                    type: string
                    example: "KO"

  /api/v1/client/posts/comment/reponse:
    post:
      summary: Ajouter une réponse à un commentaire
      tags:
        - Commentaires
      requestBody:
        description: Données nécessaires pour ajouter une réponse à un commentaire.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                postId:
                  type: string
                  description: ID du post auquel répondre.
                  example: "66ba2d393914cebca4eb2102"
                commentId:
                  type: string
                  description: ID du commentaire auquel répondre.
                  example: "66ba2d383914cebca4eb20f6"
                content:
                  type: string
                  description: Contenu de la réponse.
                  example: "Merci pour votre commentaire !"
              required:
                - postId
                - commentId
                - content
      responses:
        '200':
          description: Réponse ajoutée avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Réponse ajoutée avec succès."
                  status:
                    type: string
                    example: "OK"
        '400':
          description: Requête invalide (données manquantes ou incorrectes).
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Les données fournies sont invalides."
                  status:
                    type: string
                    example: "KO"
        '404':
          description: Commentaire ou post non trouvé.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Commentaire ou post non trouvé."
                  status:
                    type: string
                    example: "KO"
        '500':
          description: Erreur interne du serveur.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Une erreur interne s'est produite."
                  status:
                    type: string
                    example: "KO"

  /api/v1/client/compte/report:
    post:
      summary: Signaler un compte
      tags:
        - Utilisateurs/signaler
      security:
        - bearerAuth: [ ]
      requestBody:
        description: Données nécessaires pour signaler un compte.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: Contenu du rapport.
                  example: "Contenu du rapport."
                title:
                  type: string
                  description: Titre du rapport.
                  example: "Problème signalé"
                image:
                  type: array
                  items:
                    type: string
                  description: Images associées au rapport.
                  example: [ "image1.jpg", "image2.jpg" ]
                tissus:
                  type: array
                  items:
                    type: object
                    properties:
                      prixMetre:
                        type: number
                        example: 10
                      nombreMetre:
                        type: number
                        example: 5
                      tissu_id:
                        type: string
                        example: "60f7a1f3e4b0a45f7c6df1c8"
                useCredit:
                  type: boolean
                  description: Utilisation de crédit.
                  example: true
      responses:
        '201':
          description: Rapport créé avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Rapport créé avec succès."
                  status:
                    type: string
                    example: "OK"
        '400':
          description: Données invalides.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Données invalides."
                  status:
                    type: string
                    example: "KO"
        '404':
          description: Compte ou tailleur non trouvé.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Compte ou tailleur non trouvé."
                  status:
                    type: string
                    example: "KO"
        '500':
          description: Erreur interne du serveur.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Erreur interne du serveur."
                  status:
                    type: string
                    example: "KO"

  /api/v1/tailleur/{postId}:
    put:
      summary: "Met à jour un post existant"
      description: "Permet à un tailleur de mettre à jour un post existant."
      tags:
        - Posts
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: "ID du post à mettre à jour"
      requestBody:
        description: Données nécessaires pour mettre à jour le post.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: "Nouveau contenu du post"
                  example: "Mise à jour du contenu"
                title:
                  type: string
                  description: "Nouveau titre du post"
                  example: "Nouveau titre"
                image:
                  type: array
                  items:
                    type: string
                  description: "Nouvelles images associées au post"
                  example: [ "new_image1.jpg", "new_image2.jpg" ]
                tissus:
                  type: array
                  items:
                    type: object
                    properties:
                      prixMetre:
                        type: number
                        example: 15
                      nombreMetre:
                        type: number
                        example: 7
                      tissu_id:
                        type: string
                        example: "60f7a1f3e4b0a45f7c6df1c8"
              required:
                - content
                - title
      responses:
        '200':
          description: "Post mis à jour avec succès"
        '400':
          description: "Données invalides"
        '404':
          description: "Post non trouvé"
        '500':
          description: "Erreur serveur"

  /api/v1/tailleur/achetercredit:
    post:
      summary: "Acheter du crédit"
      description: "Permet à un tailleur d'acheter du crédit."
      tags:
        - Crédit
      security:
        - bearerAuth: [ ]
      requestBody:
        description: Données nécessaires pour acheter du crédit.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idCommentResponse:
                  type: string
                  description: Identifiant de la réponse à supprimer.
                  example: "605c72ef1c3e0f001f64762f"
              required:
                - idCommentResponse
      responses:
        '200':
          description: "Crédit acheté avec succès."
        '400':
          description: "ID invalide ou données manquantes."
        '500':
          description: "Erreur lors de l'achat du crédit."

  /api/v1/client/messages:
    get:
      summary: "Lister les messages d'un client"
      tags:
        - Messages/Utilisateur
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: "Liste des messages récupérée avec succès."
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        texte:
                          type: string
                        sender_id:
                          type: string
                        receiver_id:
                          type: string
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                  status:
                    type: string
                    example: 'OK'
        '400':
          description: "ID du client invalide."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "ID du client invalide."
                  status:
                    type: string
                    example: "KO"
        '404':
          description: "Aucun message trouvé."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Aucun message trouvé."
                  status:
                    type: string
                    example: "KO"
        '500':
          description: "Erreur serveur."

  /api/v1/client/measures:
    get:
      summary: "Obtenir les mesures du client"
      tags:
        - Clients
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: "Mesures du client récupérées avec succès."
          content:
            application/json:
              schema:
                type: object
                properties:
                  measures:
                    type: object
                    properties:
                      height:
                        type: number
                        example: 170
                      weight:
                        type: number
                        example: 70
                  status:
                    type: string
                    example: "OK"
        '400':
          description: "Erreur lors de la récupération des mesures."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Erreur lors de la récupération des mesures."
                  status:
                    type: string
                    example: "KO"
        '500':
          description: "Erreur interne du serveur."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Erreur interne du serveur."
                  status:
                    type: string
                    example: "KO"

  /api/v1/client/note:
    post:
      summary: "Ajouter une note à un compte"
      tags:
        - Notes
      requestBody:
        description: "Données nécessaires pour ajouter une note à un compte."
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                who_note_id:
                  type: string
                  description: "Identifiant de l'utilisateur qui ajoute la note."
                  example: "605c72ef1c3e0f001f64762d"
                noted_id:
                  type: string
                  description: "Identifiant de l'utilisateur qui reçoit la note."
                  example: "605c72ef1c3e0f001f64762e"
                rating:
                  type: integer
                  description: "Note attribuée, qui doit être un nombre entier."
                  example: 5
              required:
                - who_note_id
                - noted_id
                - rating
      responses:
        '201':
          description: "Note ajoutée avec succès."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Note ajoutée avec succès."
                  note:
                    type: object
                    properties:
                      who_note_id:
                        type: string
                        description: "Identifiant de l'utilisateur qui a ajouté la note."
                      noted_id:
                        type: string
                        description: "Identifiant de l'utilisateur noté."
                      rating:
                        type: integer
                        description: "Note attribuée."
                      createdAt:
                        type: string
                        format: date-time
                        description: "Date de création de la note."
                      updatedAt:
                        type: string
                        format: date-time
                        description: "Date de la dernière mise à jour de la note."
                  status:
                    type: string
                    example: "OK"
        '400':
          description: "Erreur de validation des données fournies."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Les champs who_note_id, noted_id et rating sont requis, et rating doit être un nombre."
                  status:
                    type: string
                    example: "KO"

  /api/v1/client/profile:
    get:
      summary: "Afficher le profil du client"
      tags:
        - Clients
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: "Profil du client affiché avec succès."
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      name:
                        type: string
                        example: "Jean Dupont"
                      email:
                        type: string
                        example: "jean.dupont@example.com"
                  status:
                    type: string
                    example: "OK"
        '500':
          description: "Erreur serveur interne."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Erreur interne du serveur."
                  status:
                    type: string
                    example: "KO"

  /api/v1/client/mesure:
    post:
      summary: Ajouter une mesure pour un compte
      tags:
        - Mesures
      requestBody:
        description: Données nécessaires pour ajouter une mesure pour un compte.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Epaule:
                  type: number
                  format: float
                  description: Mesure de l'épaule.
                  example: 42.5
                Manche:
                  type: number
                  format: float
                  description: Mesure de la manche.
                  example: 37.5
                Longueur:
                  type: number
                  format: float
                  description: Mesure de la longueur.
                  example: 100
                Poitrine:
                  type: number
                  format: float
                  description: Mesure de la poitrine.
                  example: 55
                Fesse:
                  type: number
                  format: float
                  description: Mesure de la fesse.
                  example: 35
                Taille:
                  type: number
                  format: float
                  description: Mesure de la taille.
                  example: 175
                Cou:
                  type: number
                  format: float
                  description: Mesure du cou.
                  example: 25
              required:
                - Epaule
                - Manche
                - Longueur
                - Poitrine
                - Fesse
                - Taille
                - Cou
      responses:
        '201':
          description: Mesure ajoutée avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Mesure ajoutée avec succès."
                  status:
                    type: string
                    example: "OK"
        '400':
          description: Erreur de validation des données fournies.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Données invalides."
                  status:
                    type: string
                    example: "KO"
        '500':
          description: Erreur interne du serveur.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Erreur interne du serveur."
                  status:
                    type: string
                    example: "KO"

  /api/v1/client/like:
    post:
      summary: Ajouter un like à un post
      tags:
        - Réactions
      security:
        - bearerAuth: [ ]
      requestBody:
        description: Données nécessaires pour ajouter un like.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                postId:
                  type: string
                  description: ID du post à liker.
                  example: "605c72ef7d3b3d001f647a4f"
                compteId:
                  type: string
                  description: ID du compte qui like le post.
                  example: "605c72ef7d3b3d001f647a4e"
              required:
                - postId
                - compteId
      responses:
        '201':
          description: Like ajouté avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Like ajouté avec succès."
                  status:
                    type: string
                    example: "OK"
        '400':
          description: Données invalides ou like déjà existant.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Données invalides."
                  status:
                    type: string
                    example: "KO"
        '500':
          description: Erreur interne du serveur.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Erreur interne du serveur."
                  status:
                    type: string
                    example: "KO"

  /api/v1/client/profile/posts/{id}:
    get:
      summary: Obtenir un post par ID dans le profil du client
      tags:
        - Posts
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID du post à récupérer
      responses:
        '200':
          description: Post récupéré avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Post récupéré avec succès."
                  status:
                    type: string
                    example: "OK"
                  post:
                    type: object
                    properties:
                      Epaule:
                        type: number
                        format: float
                      Manche:
                        type: number
                        format: float
                      Longueur:
                        type: number
                        format: float
                      Poitrine:
                        type: number
                        format: float
                      Fesse:
                        type: number
                        format: float
                      Taille:
                        type: number
                        format: float
                      Cou:
                        type: number
                        format: float
                      compte_id:
                        type: string
                        description: Identifiant du compte utilisateur.
                      _id:
                        type: string
                        description: Identifiant unique du post.
                      createdAt:
                        type: string
                        format: date-time
                        description: Date de création du post.
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date de la dernière mise à jour du post.
        '400':
          description: Requête invalide ou données manquantes.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Requête invalide."
                  status:
                    type: string
                    example: "KO"
        '404':
          description: Post non trouvé.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Post non trouvé."
                  status:
                    type: string
                    example: "KO"
        '500':
          description: Erreur interne du serveur.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Erreur interne du serveur."
                  status:
                    type: string
                    example: "KO"

  /api/v1/client/dislike:
    post:
      summary: Ajouter un dislike à un post
      tags:
        - Réactions
      security:
        - bearerAuth: [ ]
      requestBody:
        description: Données nécessaires pour ajouter un dislike.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                postId:
                  type: string
                  description: ID du post à disliker.
                  example: "605c72ef7d3b3d001f647a4f"
                compteId:
                  type: string
                  description: ID du compte qui dislike le post.
                  example: "605c72ef7d3b3d001f647a4e"
              required:
                - postId
                - compteId
      responses:
        '201':
          description: Dislike ajouté avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Dislike ajouté avec succès."
                  status:
                    type: string
                    example: "OK"
        '400':
          description: Données invalides ou dislike déjà existant.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Données invalides."
                  status:
                    type: string
                    example: "KO"
        '500':
          description: Erreur interne du serveur.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Erreur interne du serveur."
                  status:
                    type: string
                    example: "KO"

  /api/v1/client/accueil/posts/{id}:
    get:
      summary: Obtenir un post par ID dans l'accueil du client
      tags:
        - Posts
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID du post à récupérer
      responses:
        '200':
          description: Post récupéré avec succès.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Post récupéré avec succès."
                  status:
                    type: string
                    example: "OK"
                  post:
                    type: object
                    properties:
                      Epaule:
                        type: number
                        format: float
                      Manche:
                        type: number
                        format: float
                      Longueur:
                        type: number
                        format: float
                      Poitrine:
                        type: number
                        format: float
                      Fesse:
                        type: number
                        format: float
                      Taille:
                        type: number
                        format: float
                      Cou:
                        type: number
                        format: float
                      compte_id:
                        type: string
                        description: Identifiant du compte utilisateur.
                      _id:
                        type: string
                        description: Identifiant unique du post.
                      createdAt:
                        type: string
                        format: date-time
                        description: Date de création du post.
                      updatedAt:
                        type: string
                        format: date-time
                        description: Date de la dernière mise à jour du post.
        '400':
          description: Requête invalide ou données manquantes.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Requête invalide."
                  status:
                    type: string
                    example: "KO"
        '404':
          description: Post non trouvé.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Post non trouvé."
                  status:
                    type: string
                    example: "KO"
        '500':
          description: Erreur interne du serveur.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Erreur interne du serveur."
                  status:
                    type: string
                    example: "KO"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
